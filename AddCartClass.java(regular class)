package com.ust;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;

public class AddCartClass {
	public Vector productId=new Vector();
	public Vector<String> productName=new Vector<String>();
	public Vector<Double> productPrice=new Vector<Double>();
	public Vector<Integer> productQty=new Vector<Integer>();
	public double totalPrice;
	
	public void addToShoppingCart(Object id, Object username){
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","jades123");
			
			if(con!=null){
				System.out.println("has connected to db not null");
				//You are successfully connected to DATABASE	
		
				PreparedStatement psmt = con.prepareStatement("UPDATE SHOPPING_CART SET PRODUCTID = ? WHERE USERNAME = ? ");
				
				
				//adds session shopping cart to the table to save it for next login
				Object tempId =id;
				System.out.println(id);
				Vector productId = (Vector)tempId;
			
				String addId="";
				for(int i =0; i<productId.size();i++){
					
					addId+=(String.valueOf(productId.elementAt(i))+",");
				}

				
				System.out.println(addId);
				String un=(String)username;
			     psmt.setString(1, addId);
			     psmt.setString(2, un);
			    int rows= psmt.executeUpdate();
			    System.out.println("number of updates"+rows);
			     psmt.close();
			    
			}
			con.close();
			}
			catch(Exception e){
				System.out.println("Database connection not successful...");
				System.out.println("This might be due to various reasons..");
				System.out.println(e.getMessage());
				System.out.println(e.getCause());
				System.out.println(e.getStackTrace());
			}
	}
	
	public boolean checkShoppingCart(String username){
		boolean found=false;
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","jades123");
			
			if(con!=null){
				Statement stmt=con.createStatement();
				
				// execute select SQL stetement
				ResultSet rs=stmt.executeQuery("select * from SHOPPING_CART");

				while (rs.next()) {
					String un=rs.getString(1);
					if(un.equals(username)){
						String tempId=rs.getString(2);
						System.out.println(tempId);
						if(!tempId.equals(null)){
							found=true;
							String[] tempIds=tempId.split(",");
							for(int i=0;i<tempIds.length;i++){
								productId.add(Integer.parseInt(tempIds[i]));
							}
							System.out.println(productId);
						}							
					}
				}
				
			}
			con.close();
			}
			catch(Exception e){
				System.out.println("Database connection not successful...");
				System.out.println("This might be due to various reasons..");
				System.out.println(e.getMessage());
				System.out.println(e.getCause());
				System.out.println(e.getStackTrace());
			}
			return found;
	}
	

	@SuppressWarnings("unchecked")
	public void displayCart(Object un, Object id){
		productId=(Vector<Integer>) id;
		String user=(String) un;
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","jades123");
			
			if(con!=null){
				PreparedStatement psmt = con.prepareStatement("SELECT PRODUCTNAME, PRODUCTPRICE FROM PRODUCT WHERE PRODUCTID = ? ");
				for(int i =0; i<productId.size();i++){
					psmt.setString(1, String.valueOf(productId.elementAt(i)));
					ResultSet rs = psmt.executeQuery();
					while (rs.next()) {
					productName.add(rs.getString("PRODUCTNAME"));
					productPrice.add(Double.parseDouble(rs.getString("PRODUCTPRICE")));
					}
				}
			}
		}
		catch(Exception e){
			System.out.println("Database connection not successful...");
			System.out.println("This might be due to various reasons..");
			System.out.println(e.getMessage());
			System.out.println(e.getCause());
			System.out.println(e.getStackTrace());
			
		}
		
	}
	
	
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public void deleteId(Vector delete,Object vecId){
		Vector delId=(Vector) delete;
		Vector id=(Vector) vecId;
		System.out.println(id);
		for(int i =0; i<delId.size();i++){
			id.set(Integer.parseInt((String) delId.elementAt(i)), 0);
		}
		for(int i=0;i<id.size();i++){
			if((Integer)id.elementAt(i)==0){
				id.remove(i);
				i--;
			}
		}
		productId=id;
		System.out.println(id);
		
	}

	
	
	public void addToFinalShoppingCart(Object id, Object username){
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","jades123");
			
			if(con!=null){
				//System.out.println("has connected to db not null");
				//You are successfully connected to DATABASE	
		
				PreparedStatement psmt = con.prepareStatement("INSERT INTO PRODUCT_ORDER VALUES(?,?)");
				
				
				//adds session shopping cart to the table to save it for next login
				Object tempId =id;
				System.out.println(id);
				Vector productId = (Vector)tempId;
			
				String addId="";
				for(int i =0; i<productId.size();i++){
					
					addId+=(String.valueOf(productId.elementAt(i))+",");
					
				}

				
				System.out.println(addId);
				String un=(String)username;
			     psmt.setString(1, addId);
			     psmt.setString(2, un);
			    int rows= psmt.executeUpdate();
			    System.out.println("number of updates"+rows);
			     psmt.close();
			     
			     
			     
			   psmt = con.prepareStatement("UPDATE SHOPPING_CART SET PRODUCTID = ? WHERE USERNAME = ? ");
			   psmt.setString(1, null);
			   psmt.setString(2, un);
			   psmt.executeUpdate();
			   psmt.close();
			}
			con.close();
			}
			catch(Exception e){
				System.out.println("Database connection not successful...");
				System.out.println("This might be due to various reasons..");
				System.out.println(e.getMessage());
				System.out.println(e.getCause());
				System.out.println(e.getStackTrace());
			}
	}
	public void displayFinalOrder(Object un){
		String user=(String) un;
		totalPrice=0;
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","jades123");
			
			if(con!=null){
				PreparedStatement psmt = con.prepareStatement("SELECT PRODUCTID FROM PRODUCT_ORDER WHERE USERNAME = ? ");
				psmt.setString(1, user);
				
				ResultSet rs = psmt.executeQuery();
				while (rs.next()) {
					String tempId= rs.getString("PRODUCTID");
				
				if(!tempId.equals(null)){
					String[] tempIds=tempId.split(",");
					for(int i=0;i<tempIds.length;i++){
						int checkId= Integer.parseInt(tempIds[i]);
						
						productId.add(Integer.parseInt(tempIds[i]));
						
					}
				}
				 psmt = con.prepareStatement("SELECT PRODUCTNAME, PRODUCTPRICE FROM PRODUCT WHERE PRODUCTID = ? ");
				for(int i =0; i<productId.size();i++){
					psmt.setString(1, String.valueOf(productId.elementAt(i)));
					rs = psmt.executeQuery();
					while (rs.next()) {
					productName.add(rs.getString("PRODUCTNAME"));
					productPrice.add(Double.parseDouble(rs.getString("PRODUCTPRICE")));
					totalPrice+=Double.parseDouble(rs.getString("PRODUCTPRICE"));
					}
				}
			}
			}
			}
		catch(Exception e){
			System.out.println("Database connection not successful...");
			System.out.println("This might be due to various reasons..");
			System.out.println(e.getMessage());
			System.out.println(e.getCause());
			System.out.println(e.getStackTrace());
			
		}
		
	}
	
	public void deleteOrder(String un){
		
		
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","jades123");
			
			if(con!=null){
				PreparedStatement psmt = con.prepareStatement("UPDATE PRODUCT_ORDER SET PRODUCTID = ? WHERE USERNAME = ? ");
				psmt.setString(1, null);
				psmt.setString(2, un);
				psmt.executeUpdate();
				psmt.close();
			}
		}
		catch(Exception e){
			System.out.println("Database connection not successful...");
			System.out.println("This might be due to various reasons..");
			System.out.println(e.getMessage());
			System.out.println(e.getCause());
			System.out.println(e.getStackTrace());
			
		}
	}
}
